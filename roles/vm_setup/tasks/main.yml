---
- name: Get VMs list
  community.libvirt.virt:
    command: list_vms
  register: existing_vms
  changed_when: false

- name: Setup VM
  when: "vm_name not in existing_vms.list_vms"
  block:
    - name: Upload VM disk to the server
      ansible.builtin.copy:
        src: /home/itrooz/tmp/cirros-0.6.3-x86_64-disk.img
        dest: /var/lib/libvirt/images/cirros.img
        mode: '0644'

    - name: Define vm
      community.libvirt.virt:
        command: define
        xml: "{{ lookup('template', 'vm-template.xml.j2') }}"

    - name: Start VM
      community.libvirt.virt:
        command: start
        name: "{{ vm_name }}"

- name: Extract the IP address of the new VM
  shell: 'virsh domifaddr {{ vm_name }} | sed "/^$/d" | tail -n1 | xargs echo | cut -d " " -f 4 |  cut -d "/" -f 1'
  register: vm_ip

- name: Add the new host to the inventory
  add_host:
    name: "{{ vm_ip.stdout }}"
    ansible_ssh_user: cirros
    ansible_ssh_pass: gocubsgo  
    ansible_ssh_common_args: '-o ProxyCommand="ssh -W %h:%p polyserv.ssh"'

- name: Check user ID from VM
  command: id
  register: id_step

- debug: msg="id={{ id_step.stdout }}"

# Will not work because it requires python
- name: Ping the new VM (delegated)
  ansible.builtin.ping:
  delegate_to: "{{ vm_ip.stdout }}"